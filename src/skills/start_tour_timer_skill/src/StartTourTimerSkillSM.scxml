<scxml 
  initial="idle" 
  version="1.0" 
  name="StartTourTimerSkillAction"
  datamodel="ecmascript"
  xmlns="http://www.w3.org/2005/07/scxml">

  <datamodel>
    <data id="m_result"/>
    <data id="m_name_war" expr='"SaidWarningFlag"'/>
    <data id="m_name_max" expr='"SaidExceededFlag"'/>
  </datamodel>

  <state id="idle">
      <transition event="CMD_TICK" target="startTimer" />
      <transition event="CMD_HALT" target="sendHalted" /> 
  </state>

  <state id="startTimer">
    <onentry>
        <send event="TimeComponent.StartTourTimer.Call"/>
    </onentry>
    <transition event="TimeComponent.StartTourTimer.Return" target="startTimerResult"> 
        <assign expr="_event.data.result" location="m_result"/>
    </transition>
  </state>

  <state id="startTimerResult">
    <transition cond="m_result == 'SUCCESS'" target="setStatus" />
    <transition cond="m_result == 'FAILURE'" target="sendFailure" />
  </state>

  <state id="setStatus">
    <onentry>
        <send event="BlackboardComponent.SetInt.Call">
            <param name="field_name" expr="m_name_war"/>
            <param name="value" expr="0"/>
        </send>
    </onentry>
    <transition event="BlackboardComponent.SetInt.Return" target="setStatusResult"> 
        <assign expr="_event.data.result" location="m_result"/>
    </transition>
</state>

<state id="setStatusResult">
    <transition cond="m_result == 'SUCCESS'" target="setStatus2" />
    <transition cond="m_result == 'FAILURE'" target="sendFailure" />
</state>

<state id="setStatus2">
    <onentry>
        <send event="BlackboardComponent.SetInt.Call">
            <param name="field_name" expr="m_name_max"/>
            <param name="value" expr="0"/>
        </send>
    </onentry>
    <transition event="BlackboardComponent.SetInt.Return" target="setStatusResult2"> 
        <assign expr="_event.data.result" location="m_result"/>
    </transition>
</state>

<state id="setStatusResult2">
    <transition cond="m_result == 'SUCCESS'" target="sendSuccess" />
    <transition cond="m_result == 'FAILURE'" target="sendFailure" />
</state>

  <state id="sendFailure">
    <onentry>
      <send event="TICK_RESPONSE">
        <param name="result" expr='"FAILURE"'/>
      </send>
    </onentry>
    <transition target="idle" />
  </state>

  <state id="sendSuccess">
      <onentry>
        <send event="TICK_RESPONSE">
          <param name="result" expr='"SUCCESS"'/>
        </send>
      </onentry>
      <transition target="idle" />
  </state>

  <state id="sendHalted">
      <onentry>
          <send event="HALT_RESPONSE">
          </send>
      </onentry>
      <transition target="idle" />
  </state>

</scxml>
