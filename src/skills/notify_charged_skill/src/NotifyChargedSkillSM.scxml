<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" version="1.0" name="NotifyChargedSkillAction" datamodel="ecmascript" initial="idle">
    <datamodel>
        <data id="m_result" expr="false"/>
        <data id="SUCCESS_RESULT" expr="&apos;SUCCESS&apos;"/>
        <data id="SKILL_SUCCESS" expr="0"/>
        <data id="SKILL_FAILURE" expr="1"/>
    </datamodel>
    <!-- Action skill: tick + halt servers -->
    <!-- Client for NotifyUserComponent.NotifyUserCharged -->
    <state id="idle">
        <transition target="startNotify" event="CMD_TICK">
            <send event="NotifyUserComponent.NotifyUserCharged.Call"/>
        </transition>
        <transition target="halted" event="CMD_HALT"/>
    </state>
    <state id="startNotify">
        <transition target="evaluate" event="NotifyUserComponent.NotifyUserCharged.Return">
            <assign location="m_result" expr="_event.data.is_ok"/>
        </transition>
    </state>
    <state id="evaluate">
        <transition cond="!m_result" target="failure"/>
        <transition target="decide"/>
    </state>
    <state id="decide">
        <onentry>
            <send event="TICK_RESPONSE">
                <param name="status" expr="m_result ? SKILL_SUCCESS : SKILL_FAILURE"/>
                <param name="is_ok" expr="true"/>
            </send>
        </onentry>
        <transition target="idle"/>
    </state>
    <state id="failure">
        <onentry>
            <send event="TICK_RESPONSE">
                <param name="status" expr="SKILL_FAILURE"/>
                <param name="is_ok" expr="true"/>
            </send>
        </onentry>
        <transition target="idle"/>
    </state>
    <state id="halted">
        <onentry>
            <send event="HALT_RESPONSE">
                <param name="is_ok" expr="true"/>
            </send>
        </onentry>
        <transition target="idle"/>
    </state>
</scxml>
