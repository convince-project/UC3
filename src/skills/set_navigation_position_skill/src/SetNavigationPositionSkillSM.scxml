<scxml 
  initial="idle" 
  version="1.0" 
  name="SetNavigationPositionSkillAction"
  datamodel="ecmascript"
  xmlns="http://www.w3.org/2005/07/scxml">

  <datamodel>
    <data id="m_result"/>
    <data id="m_is_dancing"/>
    <data id="m_dance" expr='"navigationPosition"'/>
  </datamodel>

  <state id="idle">
      <transition event="CMD_TICK" target="dance" />
      <transition event="CMD_HALT" target="sendHalted" /> 
  </state>

  <state id="dance">
      <onentry>
          <send event="ExecuteDanceComponent.ExecuteDance.Call">
            <param name="dance_name" expr="m_dance"/>
          </send>
      </onentry>
      <transition event="ExecuteDanceComponent.ExecuteDance.Return" target="danceResult">
        <assign expr="_event.data.result" location="m_result"/>
      </transition>
  </state>

  <state id="danceResult">
    <transition cond="m_result == 'SUCCESS'" target="sendRunning" />
    <transition cond="m_result == 'FAILURE'" target="sendFailure" />
  </state>


  <state id="WaitForFinish">
    <transition event="CMD_TICK" target="isDancing" />
    <transition event="CMD_HALT" target="sendHalted" />
  </state>

  <state id="isDancing">
    <onentry>
        <send event="ExecuteDanceComponent.IsDancing.Call">
        </send>
    </onentry>
    <transition event="ExecuteDanceComponent.IsDancing.Return" target="isDancingResult">
        <assign expr="_event.data.result" location="m_result"/>
        <assign expr="_event.data.is_dancing" location="m_is_dancing"/>
  </transition>
  </state>

  <state id="isDancingResult">
    <transition cond="m_result == 'SUCCESS'" target="checkIfDancing" />
    <transition cond="m_result == 'FAILURE'" target="sendFailure" />
  </state>

  <state id="checkIfDancing"> 
    <transition cond="m_is_dancing" target="sendRunning" />
    <transition target="sendSuccess"/>
  </state>

  <state id="sendSuccess">
    <onentry>
        <send event="TICK_RESPONSE">
          <param name="result" expr='"SUCCESS"'/> 
        </send>
    </onentry>
    <transition target="idle" />
  </state>

  <state id="sendRunning">
    <onentry>
        <send event="TICK_RESPONSE">
          <param name="result" expr='"RUNNING"'/> 
        </send>
    </onentry>
    <transition target="WaitForFinish" />
  </state>

  <state id="sendHalted">
      <onentry>
          <send event="HALT_RESPONSE">
          </send>
      </onentry>
      <transition target="idle" />
  </state>

  <state id="sendFailure">
    <onentry>
      <send event="TICK_RESPONSE">
        <param name="result" expr='"FAILURE"'/>
      </send>
    </onentry>
    <transition target="idle" />
  </state>


</scxml>
