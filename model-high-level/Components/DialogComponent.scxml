<?xml version="1.0" encoding="UTF-8"?>
<scxml
  version="1.0"
  xmlns="..."
  datamodel="ecmascript"
  name="DialogComponent"
  initial="idle">

  <datamodel>
    <data id="current_poi_name" type="string" expr="'sala_delle_guardie'" />
    <data id="current_language" type="string" expr="'it-IT'" />
    <data id="state" type="int32" expr="0" /> <!-- 0=IDLE, 1=RUNNING, 2=SUCCESS -->
    <data id="last_question" type="string" expr="''" />
    <data id="skip_speaking" type="boolean" expr="false" />
  </datamodel>

  <!-- ROS service servers -->
  <ros_service_server service_name="/DialogComponent/SetLanguage" type="dialog_interfaces/SetLanguage"/>
  <ros_service_server service_name="/DialogComponent/GetLanguage" type="dialog_interfaces/GetLanguage"/>
  <ros_service_server service_name="/DialogComponent/EnableDialog" type="dialog_interfaces/EnableDialog"/>
  <ros_service_server service_name="/DialogComponent/SetPoi" type="dialog_interfaces/SetPoi"/>
  <ros_service_server service_name="/DialogComponent/GetState" type="dialog_interfaces/GetState"/>
  <ros_service_server service_name="/DialogComponent/SkipExplanation" type="dialog_interfaces/SkipExplanation"/>

  <!-- ROS service clients -->
  <ros_service_client service_name="/TextToSpeechComponent/IsSpeaking" type="text_to_speech_interfaces/IsSpeaking"/>
  <ros_service_client service_name="/TextToSpeechComponent/SetMicrophone" type="text_to_speech_interfaces/SetMicrophone"/>
  <ros_service_client service_name="/TextToSpeechComponent/Speak" type="text_to_speech_interfaces/Speak"/>
  <ros_service_client service_name="/SchedulerComponent/GetCurrentPoi" type="scheduler_interfaces/GetCurrentPoi"/>
  <ros_service_client service_name="/SchedulerComponent/SetLanguage" type="scheduler_interfaces/SetLanguage"/>
  <ros_service_client service_name="/SchedulerComponent/EndTour" type="scheduler_interfaces/EndTour"/>

  <state id="idle">
    <ros_service_handle_request name="/DialogComponent/SetLanguage" target="handleSetLanguage"/>
    <ros_service_handle_request name="/DialogComponent/GetLanguage" target="handleGetLanguage"/>
    <ros_service_handle_request name="/DialogComponent/EnableDialog" target="handleEnableDialog"/>
    <ros_service_handle_request name="/DialogComponent/SetPoi" target="handleSetPoi"/>
    <ros_service_handle_request name="/DialogComponent/GetState" target="handleGetState"/>
    <ros_service_handle_request name="/DialogComponent/SkipExplanation" target="handleSkipExplanation"/>
  </state>

  <state id="handleSetLanguage">
    <onentry>
      <if cond="_req.new_language == ''">
        <ros_service_send_response name="/DialogComponent/SetLanguage">
          <field name="is_ok" expr="false"/>
          <field name="error_msg" expr="'Empty string passed to setting language'"/>
        </ros_service_send_response>
      <else/>
        <assign location="current_language" expr="_req.new_language"/>
        <ros_service_send_response name="/DialogComponent/SetLanguage">
          <field name="is_ok" expr="true"/>
        </ros_service_send_response>
      </if>
    </onentry>
    <transition target="idle"/>
  </state>

  <state id="handleGetLanguage">
    <onentry>
      <ros_service_send_response name="/DialogComponent/GetLanguage">
        <field name="current_language" expr="current_language"/>
        <field name="is_ok" expr="true"/>
      </ros_service_send_response>
    </onentry>
    <transition target="idle"/>
  </state>

  <state id="handleEnableDialog">
    <onentry>
      <if cond="_req.enable">
        <!-- Get current POI from scheduler before enabling dialog -->
        <ros_service_send_request name="/SchedulerComponent/GetCurrentPoi">
        </ros_service_send_request>
        <assign location="state" expr="1"/> <!-- RUNNING -->
      <else/>
        <assign location="state" expr="0"/> <!-- IDLE -->
        <ros_service_send_response name="/DialogComponent/EnableDialog">
          <field name="is_ok" expr="true"/>
        </ros_service_send_response>
      </if>
    </onentry>
    
    <ros_service_handle_response name="/SchedulerComponent/GetCurrentPoi" target="processGetPoiResponse"/>
    <transition target="idle"/>
  </state>

  <state id="processGetPoiResponse">
    <onentry>
      <if cond="_res.is_ok">
        <assign location="current_poi_name" expr="_res.poi_name"/>
        <!-- Enable microphone after getting POI -->
        <ros_service_send_request name="/TextToSpeechComponent/SetMicrophone">
          <field name="enabled" expr="true"/>
        </ros_service_send_request>
      <else/>
        <assign location="state" expr="0"/> <!-- IDLE if POI retrieval fails -->
        <ros_service_send_response name="/DialogComponent/EnableDialog">
          <field name="is_ok" expr="false"/>
          <field name="error_msg" expr="'Error in getting the current POI'"/>
        </ros_service_send_response>
      </if>
    </onentry>
    
    <ros_service_handle_response name="/TextToSpeechComponent/SetMicrophone" target="finishEnableDialog"/>
    <transition target="idle"/>
  </state>
  
  <state id="finishEnableDialog">
    <onentry>
      <ros_service_send_response name="/DialogComponent/EnableDialog">
        <field name="is_ok" expr="true"/>
      </ros_service_send_response>
    </onentry>
    <transition target="idle"/>
  </state>

  <state id="handleSetPoi">
    <onentry>
      <if cond="_req.poi_name == ''">
        <ros_service_send_response name="/DialogComponent/SetPoi">
          <field name="is_ok" expr="false"/>
          <field name="error_msg" expr="'Empty string passed to setPoi'"/>
        </ros_service_send_response>
      <else/>
        <assign location="current_poi_name" expr="_req.poi_name"/>
        <ros_service_send_response name="/DialogComponent/SetPoi">
          <field name="is_ok" expr="true"/>
        </ros_service_send_response>
      </if>
    </onentry>
    <transition target="idle"/>
  </state>

  <state id="handleGetState">
    <onentry>
      <ros_service_send_response name="/DialogComponent/GetState">
        <field name="state" expr="state"/>
        <field name="is_ok" expr="true"/>
      </ros_service_send_response>
    </onentry>
    <transition target="idle"/>
  </state>

  <state id="handleSkipExplanation">
    <onentry>
      <if cond="state == 1">  <!-- RUNNING -->
        <assign location="skip_speaking" expr="true"/>
        <ros_service_send_response name="/DialogComponent/SkipExplanation">
          <field name="is_ok" expr="true"/>
        </ros_service_send_response>
      <else/>
        <ros_service_send_response name="/DialogComponent/SkipExplanation">
          <field name="is_ok" expr="false"/>
          <field name="error_msg" expr="'Component is not running'"/>
        </ros_service_send_response>
      </if>
    </onentry>
    <transition target="idle"/>
  </state>

  <!-- Speech handling states -->
  <state id="speakText">
    <onentry>
      <ros_service_send_request name="/TextToSpeechComponent/Speak">
        <field name="text" expr="speak_text"/>
      </ros_service_send_request>
    </onentry>
    
    <ros_service_handle_response name="/TextToSpeechComponent/Speak" target="waitForSpeakEnd"/>
    <transition target="idle"/>
  </state>
  
  <state id="waitForSpeakEnd">
    <onentry>
      <ros_service_send_request name="/TextToSpeechComponent/IsSpeaking"/>
    </onentry>
    
    <ros_service_handle_response name="/TextToSpeechComponent/IsSpeaking" target="checkSpeaking"/>
    <transition target="idle"/>
  </state>
  
  <state id="checkSpeaking">
    <onentry>
      <if cond="_res.is_speaking">
        <!-- Wait a bit and check again -->
        <send event="check_again" delay="100ms"/>
      </if>
    </onentry>
    
    <transition event="check_again" target="waitForSpeakEnd"/>
    <transition target="idle"/>
  </state>

</scxml>
