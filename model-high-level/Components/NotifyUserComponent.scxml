<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml"
       version="1.0"
       name="NotifyUserComponent"
       initial="idle"
       datamodel="ecmascript">

  <datamodel>
    <!-- whether the periodic alarm is active -->
    <data id="alarmActive" type="boolean" expr="false"/>
  </datamodel>

  <!-- ROS services -->
  <ros_service_server service_name="/NotifyUserComponent/StartAlarm"
                      type="notify_user_interfaces/srv/StartAlarm"/>
  <ros_service_server service_name="/NotifyUserComponent/StopAlarm"
                      type="notify_user_interfaces/srv/StopAlarm"/>
  <ros_service_server service_name="/NotifyUserComponent/NotifyUserCharged"
                      type="notify_user_interfaces/srv/NotifyUserCharged"/>

  <!-- timer to drive the 2 Hz alarm prints -->
  <ros_time_rate name="alarm_timer" rate_hz="2.0"/>

  <state id="idle">
    <!-- start the alarm -->
    <ros_service_handle_request name="/NotifyUserComponent/StartAlarm"
                                target="HandleStartAlarm"/>
    <!-- stop the alarm -->
    <ros_service_handle_request name="/NotifyUserComponent/StopAlarm"
                                target="HandleStopAlarm"/>
    <!-- notify that user is charged -->
    <ros_service_handle_request name="/NotifyUserComponent/NotifyUserCharged"
                                target="HandleNotifyUserCharged"/>
    <!-- if alarm is active, fire every tick -->
    <transition event="alarm_timer.tick" cond="alarmActive" target="AlarmTick"/>
  </state>

  <state id="HandleStartAlarm">
    <onentry>
      <assign location="alarmActive" expr="true"/>
      <ros_service_send_response name="/NotifyUserComponent/StartAlarm">
        <field name="is_ok" expr="true"/>
      </ros_service_send_response>
    </onentry>
    <transition target="idle"/>
  </state>

  <state id="HandleStopAlarm">
    <onentry>
      <assign location="alarmActive" expr="false"/>
      <ros_service_send_response name="/NotifyUserComponent/StopAlarm">
        <field name="is_ok" expr="true"/>
      </ros_service_send_response>
    </onentry>
    <transition target="idle"/>
  </state>

  <state id="HandleNotifyUserCharged">
    <onentry>
      <!-- ensure alarm is stopped -->
      <assign location="alarmActive" expr="false"/>
      <ros_service_send_response name="/NotifyUserComponent/NotifyUserCharged">
        <field name="is_ok" expr="true"/>
      </ros_service_send_response>
      <log label="info"
           expr="'I\\'m charged ======================================================================================================='"/>
    </onentry>
    <transition target="idle"/>
  </state>

  <state id="AlarmTick">
    <onentry>
      <log label="info" expr="'alarm'"/>
    </onentry>
    <transition target="idle"/>
  </state>

</scxml>
