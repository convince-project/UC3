<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml"
       version="1.0"
       name="TextToSpeechComponent"
       initial="idle"
       datamodel="ecmascript">

  <datamodel>
    <!-- request fields -->
    <data id="req_new_language"    type="string"  expr="''"/>
    <data id="req_text"            type="string"  expr="''"/>
    <data id="req_enabled"         type="bool" expr="false"/>
    <!-- response fields -->
    <data id="res_is_ok"           type="bool" expr="false"/>
    <data id="res_error_msg"       type="string"  expr="''"/>
    <data id="res_current_language" type="string" expr="''"/>
    <data id="res_is_speaking"     type="bool" expr="false"/>
    <data id="res_seconds_left"    type="int32"  expr="0"/>
  </datamodel>

  <!-- ROS service servers -->
  <!-- <ros_service_server service_name="/TextToSpeechComponent/SetLanguage" type="text_to_speech_interfaces/SetLanguage"/> -->
  <!-- <ros_service_server service_name="/TextToSpeechComponent/GetLanguage" type="text_to_speech_interfaces/GetLanguage"/> -->
  <ros_service_server service_name="/TextToSpeechComponent/Speak" type="text_to_speech_interfaces/Speak"/>
  <ros_service_server service_name="/TextToSpeechComponent/IsSpeaking" type="text_to_speech_interfaces/IsSpeaking"/>
  <!-- <ros_service_server service_name="/TextToSpeechComponent/SetMicrophone" type="text_to_speech_interfaces/SetMicrophone"/>
  <ros_service_server service_name="/TextToSpeechComponent/SetVoice" type="text_to_speech_interfaces/SetVoice"/> -->

  <!-- publisher for speaking status -->
  <ros_topic_publisher topic="/TextToSpeechComponent/is_speaking" type="std_msgs/Bool"/>

  <state id="idle">
    <!-- handle SetLanguage -->
    <!-- <ros_service_handle_request name="/TextToSpeechComponent/SetLanguage" target="HandleSetLanguage">
      <assign location="req_new_language" expr="_req.new_language"/>
    </ros_service_handle_request> -->

    <!-- handle GetLanguage -->
    <!-- <ros_service_handle_request name="/TextToSpeechComponent/GetLanguage" target="HandleGetLanguage"/> -->

    <!-- handle Speak -->
    <ros_service_handle_request name="/TextToSpeechComponent/Speak" target="HandleSpeak">
      <assign location="req_text" expr="_req.text"/>
    </ros_service_handle_request>

    <!-- handle IsSpeaking -->
    <ros_service_handle_request name="/TextToSpeechComponent/IsSpeaking" target="HandleIsSpeaking"/>

    <!-- handle SetMicrophone -->
    <!-- <ros_service_handle_request name="/TextToSpeechComponent/SetMicrophone" target="HandleSetMicrophone">
      <assign location="req_enabled" expr="_req.enabled"/>
    </ros_service_handle_request> -->

    <!-- handle SetVoice -->
    <!-- <ros_service_handle_request name="/TextToSpeechComponent/SetVoice" target="HandleSetVoice"/> -->
  </state>
<!-- 
  <state id="HandleSetLanguage">
    <onentry>
      <ros_service_send_response name="/TextToSpeechComponent/SetLanguage">
        <field name="is_ok"     expr="_result.is_ok"/>
        <field name="error_msg" expr="_result.error_msg"/>
      </ros_service_send_response>
    </onentry>
    <transition target="idle"/>
  </state> -->

  <!-- <state id="HandleGetLanguage">
    <onentry>
      <ros_service_send_response name="/TextToSpeechComponent/GetLanguage">
        <field name="current_language" expr="_result.current_language"/>
        <field name="is_ok"             expr="_result.is_ok"/>
        <field name="error_msg"         expr="_result.error_msg"/>
      </ros_service_send_response>
    </onentry>
    <transition target="idle"/>
  </state> -->

  <state id="HandleSpeak">
    <onentry>
      <ros_service_send_response name="/TextToSpeechComponent/Speak">
        <field name="is_ok"     expr="_result.is_ok"/>
        <field name="error_msg" expr="_result.error_msg"/>
      </ros_service_send_response>
      <!-- publish is_speaking = true if started -->
      <ros_topic_publish name="/TextToSpeechComponent/is_speaking">
        <field name="data" expr="_result.is_ok"/>
      </ros_topic_publish>
    </onentry>
    <transition target="idle"/>
  </state>

  <state id="HandleIsSpeaking">
    <onentry>
      <ros_service_send_response name="/TextToSpeechComponent/IsSpeaking">
        <field name="is_ok"         expr="_result.is_ok"/>
        <field name="seconds_left"  expr="_result.seconds_left"/>
        <field name="is_speaking"   expr="_result.is_speaking"/>
        <field name="error_msg"     expr="_result.error_msg"/>
      </ros_service_send_response>
      <!-- mirror status on the topic -->
      <ros_topic_publish name="/TextToSpeechComponent/is_speaking">
        <field name="data" expr="_result.is_speaking"/>
      </ros_topic_publish>
    </onentry>
    <transition target="idle"/>
  </state>

  <!-- <state id="HandleSetMicrophone">
    <onentry>
      <ros_service_send_response name="/TextToSpeechComponent/SetMicrophone">
        <field name="is_ok"     expr="_result.is_ok"/>
        <field name="error_msg" expr="_result.error_msg"/>
      </ros_service_send_response>
    </onentry>
    <transition target="idle"/>
  </state> -->

  <!-- <state id="HandleSetVoice">
    <onentry>
      <ros_service_send_response name="/TextToSpeechComponent/SetVoice">
        <field name="is_ok"     expr="_result.is_ok"/>
        <field name="error_msg" expr="_result.error_msg"/>
      </ros_service_send_response>
    </onentry>
    <transition target="idle"/>
  </state> -->

</scxml>