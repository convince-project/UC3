<scxml
    version="1.0"
    xmlns="..."
    datamodel="ecmascript"
    name="RunTimerSkill"
    initial="idle"> 

    <datamodel>
        <data id="timer_active" type="bool" expr="false" />
        <data id="SKILL_SUCCESS" type="int8" expr="0" />
        <data id="SKILL_FAILURE" type="int8" expr="1" />
        <data id="SKILL_RUNNING" type="int8" expr="2" />
    </datamodel>

    <!-- RunTimerSkill is a server for tick from the ROS2Action plugin-->
    <ros_service_server service_name="/RunTimerSkill/tick" type ="bt_interfaces_dummy/TickAction"/>
    <!-- RunTimerSkill is a server for halt from the ROS2Action plugin-->
    <!-- <ros_service_server service_name="/RunTimerSkill/halt" type ="bt_interface/HaltAction"/> -->
    <!-- RunTimerSkill is a client for IsTimerActive from the TimerCheckForPeopleComponent -->
    <ros_service_client service_name="/TimerCheckForPeopleComponent/IsTimerActive" type ="timer_check_for_people_interfaces/IsTimerActive"/>
    <!-- RunTimerSkill is a client for StartTimer from the TimerCheckForPeopleComponent -->
    <ros_service_client service_name="/TimerCheckForPeopleComponent/StartTimer" type ="timer_check_for_people_interfaces/StartTimer"/>

    <state id="idle">
        <ros_service_handle_request name="/RunTimerSkill/tick" target="isTimerActive">
            <ros_service_send_request name="/TimerCheckForPeopleComponent/IsTimerActive"/>
        </ros_service_handle_request>
        <!-- <ros_service_handle_request name="/RunTimerSkill/halt" target="idle">
            <ros_service_send_response name="/RunTimerSkill/halt"/>
        </ros_service_handle_request> -->

    </state>

    <state id="isTimerActive">
        <ros_service_handle_response name="/TimerCheckForPeopleComponent/IsTimerActive" cond="(_res.is_ok) == false " target="idle">
            <ros_service_send_response name="/RunTimerSkill/tick">
                <field name="status" expr="SKILL_FAILURE"/>
                <field name="is_ok" expr="true"/>
            </ros_service_send_response>
        </ros_service_handle_response>
        <ros_service_handle_response name="/TimerCheckForPeopleComponent/IsTimerActive" cond="_res.is_active " target="idle">
            <ros_service_send_response name="/RunTimerSkill/tick">
                <field name="status" expr="SKILL_RUNNING"/>
                <field name="is_ok" expr="true"/>
            </ros_service_send_response>
        </ros_service_handle_response>
        <ros_service_handle_response name="/TimerCheckForPeopleComponent/IsTimerActive" cond="(_res.is_active) == false" target="startTimer">
            <ros_service_send_request name="/TimerCheckForPeopleComponent/StartTimer"/>
        </ros_service_handle_response>
        <!-- <ros_service_handle_request name="/RunTimerSkill/halt" target="idle">
            <ros_service_send_response name="/RunTimerSkill/halt"/>
        </ros_service_handle_request> -->

    </state>

    <state id="startTimer">
        <ros_service_handle_response name="/TimerCheckForPeopleComponent/StartTimer" cond="_res.is_ok" target="idle">
            <ros_service_send_response name="/RunTimerSkill/tick">
                <field name="status" expr="SKILL_SUCCESS"/>
                <field name="is_ok" expr="true"/>
            </ros_service_send_response>
        </ros_service_handle_response>
        <ros_service_handle_response name="/TimerCheckForPeopleComponent/StartTimer" cond="(_res.is_ok) == false" target="idle">
            <ros_service_send_response name="/RunTimerSkill/tick">
                <field name="status" expr="SKILL_FAILURE"/>
                <field name="is_ok" expr="true"/>
            </ros_service_send_response>
        </ros_service_handle_response>
        <!-- <ros_service_handle_request name="/RunTimerSkill/halt" target="idle">
            <ros_service_send_response name="/RunTimerSkill/halt"/>
        </ros_service_handle_request> -->
    </state>
</scxml>
