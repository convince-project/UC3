<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml"
       version="1.0"
       name="StopAndTurnBackSkillAction"
       datamodel="ecmascript"
       initial="idle">

  <datamodel>
    <data id="status"        expr="0"/>
    <data id="result"        expr="''"/>
    <data id="NAV_MOVING"    expr="2"/>
    <data id="NAV_REACHED"   expr="4"/>
    <data id="BB_FIELD"      expr="'isCheckingForPeople'"/>
    <data id="SKILL_SUCCESS" expr="0"/>
    <data id="SKILL_FAILURE" expr="1"/>
    <data id="SKILL_RUNNING" expr="2"/>
  </datamodel>

  <ros_service_server service_name="/StopAndTurnBackSkillAction/tick"  type="bt_interfaces_dummy/TickAction"/>
  <ros_service_server service_name="/StopAndTurnBackSkillAction/halt"  type="bt_interfaces_dummy/HaltAction"/>

  <!-- Clients -->
  <ros_service_client service_name="/NavigationComponent/TurnBack"          type="navigation_interfaces_dummy/TurnBack"/>
  <ros_service_client service_name="/NavigationComponent/GetNavigationStatus" type="navigation_interfaces_dummy/GetStatus"/>
  <ros_service_client service_name="/NavigationComponent/StopNavigation"    type="navigation_interfaces_dummy/Stop"/>
  <ros_service_client service_name="/BlackboardComponent/SetInt"            type="blackboard_interfaces_dummy/SetInt"/>

  <!-- === flow === -->
  <state id="idle">
    <ros_service_handle_request name="/StopAndTurnBackSkillAction/tick" target="callTurnBack">
      <ros_service_send_request name="/NavigationComponent/TurnBack"/>
    </ros_service_handle_request>
    <ros_service_handle_request name="/StopAndTurnBackSkillAction/halt" target="callStopNav">
      <ros_service_send_request name="/NavigationComponent/StopNavigation"/>
    </ros_service_handle_request>
  </state>

  <!-- TurnBack answer -->
  <state id="callTurnBack">
    <ros_service_handle_response name="/NavigationComponent/TurnBack" target="afterTurnBack">
      <assign location="result" expr="_res.result"/>
    </ros_service_handle_response>
  </state>

  <state id="afterTurnBack">
    <onentry>
      <if cond="result == 'SUCCESS'">
        <ros_service_send_request name="/NavigationComponent/GetNavigationStatus"/>
      <else/>
        <ros_service_send_response name="/StopAndTurnBackSkillAction/tick">
          <field name="status" expr="SKILL_FAILURE"/>
        </ros_service_send_response>
      </if>
    </onentry>
    <transition cond="result == 'SUCCESS'" target="waitStatus"/>
    <transition cond="result != 'SUCCESS'" target="idle"/>
  </state>

  <!-- Loop asking status each tick -->
  <state id="waitStatus">
    <ros_service_handle_response name="/NavigationComponent/GetNavigationStatus" target="evalStatus">
      <assign location="status" expr="_res.status"/>
    </ros_service_handle_response>
  </state>

  <state id="evalStatus">
    <onentry>
      <if cond="status == NAV_MOVING">
        <ros_service_send_response name="/StopAndTurnBackSkillAction/tick">
          <field name="status" expr="SKILL_RUNNING"/>
        </ros_service_send_response>
      <elseif cond="status == NAV_REACHED"/>
        <!-- set BB flag -->
        <ros_service_send_request name="/BlackboardComponent/SetInt">
          <field name="field_name" expr="BB_FIELD"/>
          <field name="value"      expr="1"/>
        </ros_service_send_request>
      <else/>
        <ros_service_send_response name="/StopAndTurnBackSkillAction/tick">
          <field name="status" expr="SKILL_FAILURE"/>
        </ros_service_send_response>
      </if>
    </onentry>
    <transition cond="status == NAV_MOVING"  target="idle"/>
    <transition cond="status == NAV_REACHED" target="waitBB"/>
    <transition cond="status != NAV_MOVING && status != NAV_REACHED" target="idle"/>
  </state>

  <state id="waitBB">
    <ros_service_handle_response name="/BlackboardComponent/SetInt" target="done">
      <assign location="result" expr="_res.result"/>
    </ros_service_handle_response>
  </state>

  <state id="done">
    <ros_service_send_response name="/StopAndTurnBackSkillAction/tick">
      <field name="status" expr="result == 'SUCCESS' ? SKILL_SUCCESS : SKILL_FAILURE"/>
    </ros_service_send_response>
    <transition target="idle"/>
  </state>

  <!-- Halt path -->
  <state id="callStopNav">
    <ros_service_handle_response name="/NavigationComponent/StopNavigation" target="halted"/>
  </state>

  <state id="halted">
    <ros_service_send_response name="/StopAndTurnBackSkillAction/halt"/>
    <transition target="idle"/>
  </state>

</scxml>
