<?xml version="1.0" encoding="UTF-8"?>
<scxml
  xmlns="http://www.w3.org/2005/07/scxml"
  version="1.0"
  name="ResetTourSkill"
  datamodel="ecmascript"
  initial="idle">

  <datamodel>
    <data id="m_result"      type="string" expr="''"/>
    <data id="SKILL_SUCCESS" type="int8"   expr="0"/>
    <data id="SKILL_FAILURE" type="int8"   expr="1"/>
  </datamodel>

  <!-- Action skill: tick + halt servers -->
  <ros_service_server service_name="/ResetTourSkill/tick" type="bt_interfaces_dummy/TickAction"/>
  <ros_service_server service_name="/ResetTourSkill/halt" type="bt_interfaces_dummy/HaltAction"/>

  <!-- Client for Reset -->
  <ros_service_client service_name="/SchedulerComponent/Reset" type="scheduler_interfaces/Reset"/>

  <state id="idle">
    <ros_service_handle_request name="/ResetTourSkill/tick" target="resetTour">
      <ros_service_send_request name="/SchedulerComponent/Reset"/>
    </ros_service_handle_request>
    <ros_service_handle_request name="/ResetTourSkill/halt" target="halted"/>
  </state>

  <state id="resetTour">
    <ros_service_handle_response name="/SchedulerComponent/Reset" target="decide">
      <assign location="m_result" expr="_res.result"/>
    </ros_service_handle_response>
  </state>

  <state id="decide">
    <onentry>
      <if cond="m_result=='SKILL_SUCCESS'">
        <ros_service_send_response name="/ResetTourSkill/tick">
          <field name="status" expr="SKILL_SUCCESS"/>
        </ros_service_send_response>
      <else/>
        <ros_service_send_response name="/ResetTourSkill/tick">
          <field name="status" expr="SKILL_FAILURE"/>
        </ros_service_send_response>
      </if>
    </onentry>
    <transition target="idle"/>
  </state>

  <state id="halted">
    <onentry>
      <ros_service_send_response name="/ResetTourSkill/halt"/>
    </onentry>
    <transition target="idle"/>
  </state>

</scxml>
