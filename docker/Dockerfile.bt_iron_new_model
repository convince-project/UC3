ARG base_img=elandini84/r1images:tourSim2_ubuntu_22.04_qt_6.8.3_iron_devel
FROM $base_img
LABEL maintainer="Stefano Bernagozzi"
USER root

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update 
RUN apt install curl gnupg2 lsb-release -y 
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg
# RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null
RUN apt update
RUN apt-cache policy | grep universe && apt-get install -y libczmq-dev ros-iron-zmqpp-vendor-dbgsym ros-iron-zmqpp-vendor libczmq-dev libczmq4 curl 

RUN apt install qtbase5-dev libqt5svg5-dev libzmq3-dev libdw-dev libboost-all-dev zip -y

RUN usermod -a -G audio user1
# install behavior tree.cpp v3.8
WORKDIR /home/user1
RUN /bin/bash -c "git clone --recurse-submodules https://github.com/BehaviorTree/BehaviorTree.CPP.git -b v3.8 && \
    cd BehaviorTree.CPP && \
    cmake -S . -B build && \
    cmake --build build && \
    cmake --install build"

# RUN pip install reelay websocket-client jedi prompt_toolkit

RUN /bin/bash -c "git clone --recurse-submodules https://github.com/BehaviorTree/Groot.git && \
    cd Groot && \
    cmake -S . -B build && \
    cmake --build build && \
    cmake --install build"

USER user1

WORKDIR ${robotology_install_folder}

#add fakeNavigation device

# git remote add ste93 https://github.com/ste93/yarp && \
# git fetch ste93 && \
# git checkout ste93/test/yarpmanager/default_app && \
RUN cd yarp && \
    cd build && \
    cmake .. \
    -DCMAKE_BUILD_TYPE=Release \
    -DYARP_COMPILE_libYARP_math=ON \
    -DYARP_COMPILE_GUIS=ON \
    -DYARP_COMPILE_DEVICE_PLUGINS=ON \
    -DENABLE_yarpcar_mjpeg=ON \
    -DENABLE_yarpcar_segmentationimage=ON \
    -DENABLE_yarpcar_portmonitor=ON \
    -DENABLE_yarpmod_portaudio=ON \
    -DENABLE_yarpmod_portaudioPlayer=ON \
    -DENABLE_yarpmod_portaudioRecorder=ON \
    -DENABLE_yarpmod_fakeAnalogSensor=ON \
    -DENABLE_yarpmod_fakeBattery=ON  \
    -DENABLE_yarpmod_fakeDepthCamera=ON \
    -DENABLE_yarpmod_fakeIMU=ON  \
    -DENABLE_yarpmod_fakeLaser=ON  \
    -DENABLE_yarpmod_fakeLocalizer=ON \
    -DENABLE_yarpmod_fakeMicrophone=ON  \
    -DENABLE_yarpmod_fakeMotionControl=ON  \
    -DENABLE_yarpmod_fakeNavigation=ON  \
    -DENABLE_yarpmod_fakeSpeaker=ON  \
    -DENABLE_yarpmod_fakebot=ON \
    -DENABLE_yarpmod_laserFromDepth=ON \
    -DENABLE_yarpmod_laserFromExternalPort=ON \
    -DENABLE_yarpmod_laserFromDepth=ON \
    -DENABLE_yarpmod_laserFromPointCloud=ON \
    -DENABLE_yarpmod_laserFromRosTopic=ON \
    -DENABLE_yarppm_soundfilter_resample=ON \
    -DENABLE_yarppm_bottle_compression_zlib=ON \
    -DENABLE_yarppm_depthimage_compression_zlib=ON \
    -DENABLE_yarppm_image_compression_ffmpeg=ON \
    -DENABLE_yarppm_depthimage_to_mono=ON \
    -DENABLE_yarppm_depthimage_to_rgb=ON && \
    make -j11


RUN cd yarp-devices-ros2/ros2_interfaces_ws && /bin/bash -c "source /opt/ros/iron/setup.bash; colcon build"
RUN cd yarp-devices-ros2 && cd build && /bin/bash -c "source /opt/ros/iron/setup.bash; source ${robotology_install_folder}/yarp-devices-ros2/ros2_interfaces_ws/install/setup.bash; cmake .. -DYARP_ROS2_USE_SYSTEM_map2d_nws_ros2_msgs=ON -DYARP_ROS2_USE_SYSTEM_yarp_control_msgs=ON; make -j11"
    
WORKDIR /home/user1 

RUN /bin/bash -c "cd /home/user1 && rm -rf ROSMonitoring"

RUN /bin/bash -c "source /opt/ros/iron/setup.bash && \
    cd /home/user1 && git clone https://github.com/ste93/ROSMonitoring.git -b ros2"

# installing as2fm
# RUN /bin/bash -c "/home/user1/convince-python-env/bin/pip install --upgrade pip"
# RUN /bin/bash -c "source /opt/ros/iron/setup.bash && \
#     cd /home/user1 && \
#     git clone https://github.com/convince-project/AS2FM.git && /home/user1/convince-python-env/bin/python -m pip install AS2FM/"

# install SCAN
USER user1
# RUN /bin/bash -c "curl https://sh.rustup.rs -sSf | sh -s -- -y"

# RUN /bin/bash -c "source /home/user1/.cargo/env && cargo install --git https://github.com/convince-project/scan"

# RUN /bin/bash -c "sudo apt install gobject-introspection libgirepository1.0-dev -y"
# RUN /bin/bash -c "cd /home/user1/ && \
# python3 -m venv monitoring-python-env && \
# /home/user1/monitoring-python-env/bin/pip install --upgrade pip && \
# /home/user1/monitoring-python-env/bin/pip install websocket_client rospy_message_converter pyyaml reelay jedi pycairo PyGObject==3.50.0 prompt_toolkit"

# model2code

RUN /bin/bash -c "cd /home/user1 && \
    git clone https://github.com/Microsoft/vcpkg.git"
    
RUN /bin/bash -c "cd /home/user1 && \ 
    cd vcpkg && \
    ./bootstrap-vcpkg.sh    && \
    ./vcpkg integrate install && \
    ./vcpkg install tinyxml2" 

ENV LD_LIBRARY_PATH=/home/user1/vcpkg/installed/x64-linux/share/tinyxml2/:${LD_LIBRARY_PATH}

ENV CMAKE_PREFIX_PATH=/home/user1/vcpkg/installed/x64-linux/share/tinyxml2/:${CMAKE_PREFIX_PATH}


RUN /bin/bash -c " cd /home/user1 && \
    git clone https://github.com/convince-project/model2code.git && \
    cd model2code && \
    mkdir build && \
    cd build && \
    cmake .. && \
    sudo make install"

RUN echo "export PATH=\$PATH:/home/user1/Groot/build" >> ~/.bashrc

ENV PATH=/usr/local/Qt-6.8.3/bin:$PATH

RUN /bin/bash -c "echo 'updated on 202505301005' && \
    source /opt/ros/iron/setup.bash && \
    cd /home/user1 && \
    git clone https://github.com/convince-project/UC3.git && \
    source /opt/ros/iron/setup.bash && \
    cd /home/user1/UC3/ && \
    colcon build --base-paths src/* --packages-ignore face_expressions_wrapper dance_component"


RUN echo "source /home/user1/UC3/install/setup.bash" >> ~/.bashrc

ENV PATH=${PATH}:/home/user1/.local/bin

ENV UPDATED_ON=202506041448

ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/src/robot/yarp/build/lib/

ENV LD_LIBRARY_PATH=/usr/local/Qt-6.8.3/lib/:$LD_LIBRARY_PATH 

ENV CYCLONEDDS_URI=/home/user1/UC3/docker/cyclone_dds_settings.xml

ENV YARP_DATA_DIRS=${YARP_DATA_DIRS}:/home/user1/UC3/launch

ENV TZ=Europe/Rome

ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/home/user1/Groot/build/
