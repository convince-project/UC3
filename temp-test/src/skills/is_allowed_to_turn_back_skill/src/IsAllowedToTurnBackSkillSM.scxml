<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" version="1.0" name="IsAllowedToTurnBackSkillCondition" datamodel="ecmascript" initial="idle">
    <datamodel>
        <data id="m_result" expr="&apos;&apos;"/>
        <data id="m_is_allowed" expr="false"/>
        <data id="m_value" expr="&apos;&apos;"/>
        <data id="m_name" expr="&apos;turnBackState&apos;"/>
        <data id="SKILL_SUCCESS" expr="0"/>
        <data id="SKILL_FAILURE" expr="1"/>
    </datamodel>
    <!-- Condition skill: tick server only -->
    <!-- Clients -->
    <state id="idle">
        <transition target="getAllowed" event="CMD_TICK">
            <send event="TurnBackManagerComponent.IsAllowedToTurnBack.Call"/>
        </transition>
    </state>
    <state id="getAllowed">
        <transition target="evaluateAllowed" event="TurnBackManagerComponent.IsAllowedToTurnBack.Return">
            <assign location="m_result" expr="_event.data.result"/>
            <assign location="m_is_allowed" expr="_event.data.is_allowed"/>
        </transition>
    </state>
    <state id="evaluateAllowed">
        <transition cond="m_result!=&apos;SUCCESS&apos;" target="failure"/>
        <transition cond="m_is_allowed" target="success"/>
        <transition target="getTurning"/>
    </state>
    <state id="getTurning">
        <onentry>
            <send event="BlackboardComponent.GetStringBlackboard.Call">
                <param name="field_name" expr="m_name"/>
            </send>
        </onentry>
        <transition target="evaluateTurning" event="BlackboardComponent.GetStringBlackboard.Return">
            <assign location="m_result" expr="_event.data.result"/>
            <assign location="m_value" expr="_event.data.value"/>
        </transition>
    </state>
    <state id="evaluateTurning">
        <transition cond="m_result!=&apos;SUCCESS&apos;" target="failure"/>
        <transition cond="m_value==&apos;not_turning&apos;" target="failure"/>
        <transition target="success"/>
    </state>
    <state id="failure">
        <onentry>
            <send event="TICK_RESPONSE">
                <param name="status" expr="SKILL_FAILURE"/>
            </send>
        </onentry>
        <transition target="idle"/>
    </state>
    <state id="success">
        <onentry>
            <send event="TICK_RESPONSE">
                <param name="status" expr="SKILL_SUCCESS"/>
            </send>
        </onentry>
        <transition target="idle"/>
    </state>
</scxml>
