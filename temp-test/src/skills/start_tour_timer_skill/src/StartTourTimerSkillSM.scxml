<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" version="1.0" name="StartTourTimerSkillAction" datamodel="ecmascript" initial="idle">
    <datamodel>
        <data id="result" expr="&apos;&apos;"/>
        <data id="SKILL_SUCCESS" expr="0"/>
        <data id="SKILL_FAILURE" expr="1"/>
        <data id="FLAG_WARN" expr="&apos;SaidWarningFlag&apos;"/>
        <data id="FLAG_EXC" expr="&apos;SaidExceededFlag&apos;"/>
    </datamodel>
    <state id="idle">
        <transition target="startTimer" event="CMD_TICK">
            <send event="TimeComponent.StartTourTimer.Call"/>
        </transition>
        <transition target="halted" event="CMD_HALT"/>
    </state>
    <state id="startTimer">
        <transition target="afterTimer" event="TimeComponent.StartTourTimer.Return">
            <assign location="result" expr="_event.data.result"/>
        </transition>
    </state>
    <state id="afterTimer">
        <transition cond="result == &apos;SUCCESS&apos;" target="resetWarn"/>
        <transition cond="result != &apos;SUCCESS&apos;" target="failReply"/>
    </state>
    <state id="resetWarn">
        <onentry>
            <send event="BlackboardComponent.SetInt.Call">
                <param name="field_name" expr="FLAG_WARN"/>
                <param name="value" expr="0"/>
            </send>
        </onentry>
        <transition target="resetExc" event="BlackboardComponent.SetInt.Return"/>
    </state>
    <state id="resetExc">
        <onentry>
            <send event="BlackboardComponent.SetInt.Call">
                <param name="field_name" expr="FLAG_EXC"/>
                <param name="value" expr="0"/>
            </send>
        </onentry>
        <transition target="successReply" event="BlackboardComponent.SetInt.Return">
            <assign location="result" expr="_event.data.result"/>
        </transition>
    </state>
    <state id="successReply">
        <onentry>
            <send event="TICK_RESPONSE">
                <param name="status" expr="SKILL_SUCCESS"/>
            </send>
        </onentry>
        <transition target="idle"/>
    </state>
    <state id="failReply">
        <onentry>
            <send event="TICK_RESPONSE">
                <param name="status" expr="SKILL_FAILURE"/>
            </send>
        </onentry>
        <transition target="idle"/>
    </state>
    <state id="halted">
        <onentry>
            <send event="HALT_RESPONSE"/>
        </onentry>
        <transition target="idle"/>
    </state>
</scxml>
