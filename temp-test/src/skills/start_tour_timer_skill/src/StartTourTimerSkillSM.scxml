<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" version="1.0" name="StartTourTimerSkillAction" datamodel="ecmascript" initial="idle">
    <datamodel>
        <data id="result" expr="&apos;&apos;"/>
        <data id="SKILL_SUCCESS" expr="0"/>
        <data id="SKILL_FAILURE" expr="1"/>
        <data id="FLAG_WARN" expr="&apos;SaidWarningFlag&apos;"/>
        <data id="FLAG_EXC" expr="&apos;SaidExceededFlag&apos;"/>
    </datamodel>
    <state id="idle">
        <transition target="startTimer" event="CMD_TICK">
            <send event="TimeComponent.StartTourTimer.Call"/>
        </transition>
        <transition target="halted" event="CMD_HALT"/>
    </state>
    <state id="startTimer">
        <transition target="afterTimer" event="TimeComponent.StartTourTimer.Return">
            <assign location="result" expr="_event.data.result"/>
        </transition>
    </state>
    <!-- If timer started, reset first flag -->
    <state id="afterTimer">
        <onentry>
            <if cond="result == &apos;SUCCESS&apos;">
                <send event="BlackboardComponent.SetInt.Call">
                    <param name="field_name" expr="FLAG_WARN"/>
                    <param name="value" expr="0"/>
                </send>
                <else/>
                <send event="TICK_RESPONSE">
                    <param name="status" expr="SKILL_FAILURE"/>
                </send>
            </if>
        </onentry>
        <transition cond="result == &apos;SUCCESS&apos;" target="waitWarn"/>
        <transition cond="result != &apos;SUCCESS&apos;" target="idle"/>
    </state>
    <state id="waitWarn">
        <transition target="afterWarn" event="BlackboardComponent.SetInt.Return"/>
    </state>
    <!-- Reset second flag -->
    <state id="afterWarn">
        <send event="BlackboardComponent.SetInt.Call">
            <param name="field_name" expr="FLAG_EXC"/>
            <param name="value" expr="0"/>
        </send>
        <transition target="waitExc"/>
    </state>
    <state id="waitExc">
        <transition target="reply" event="BlackboardComponent.SetInt.Return">
            <assign location="result" expr="_event.data.result"/>
        </transition>
    </state>
    <state id="reply">
        <onentry>
            <if cond="result == &apos;SUCCESS&apos;">
                <send event="TICK_RESPONSE">
                    <param name="status" expr="SKILL_SUCCESS"/>
                </send>
                <else/>
                <send event="TICK_RESPONSE">
                    <param name="status" expr="SKILL_FAILURE"/>
                </send>
            </if>
        </onentry>
        <transition target="idle"/>
    </state>
    <state id="halted">
        <onentry>
            <send event="HALT_RESPONSE"/>
        </onentry>
        <transition target="idle"/>
    </state>
</scxml>
